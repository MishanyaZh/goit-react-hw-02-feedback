{"version":3,"sources":["Feedback/Feedback.jsx","App.jsx","index.js","Feedback/Feedback.module.css","App.module.css"],"names":["Feedback","state","good","neutral","bad","handleGood","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","handleNeutral","handleBad","proc","console","log","className","css","containerF","titleF","listF","type","onClick","this","containerS","titleS","Component","App","appContainer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAwGeA,E,4MAnGbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,WAAa,WACX,EAAKC,UAAS,SAAAC,GAEZ,MAAO,CACLL,KAFeK,EAATL,KAEO,MAGjB,EAAKM,qBACL,EAAKC,mC,EAGPC,cAAgB,WACd,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BJ,QAASI,EAAUJ,QAAU,MAE/B,EAAKK,qBACL,EAAKC,mC,EAGPE,UAAY,WACV,EAAKL,UAAS,SAAAC,GAAS,MAAK,CAC1BH,IAAKG,EAAUH,IAAM,MAEvB,EAAKI,qBACL,EAAKC,mC,EAGPD,mBAAqB,WAEnB,OADiB,EAAKP,MAAMG,IAAM,EAAKH,MAAMC,KAAO,EAAKD,MAAME,S,EAIjEM,gCAAkC,WAChC,IAGMG,EAHW,EAAKX,MAAMC,MACX,EAAKD,MAAMG,IAAM,EAAKH,MAAMC,KAAO,EAAKD,MAAME,SAE1B,IAGrC,OADAU,QAAQC,IAAIF,GACLA,G,4CAGT,WACE,OACE,gCACE,sBAAKG,UAAWC,IAAIC,WAApB,UACE,sBAAMF,UAAWC,IAAIE,OAArB,mCACA,qBAAIH,UAAWC,IAAIG,MAAnB,UACE,6BACE,wBAAQC,KAAK,SAASC,QAASC,KAAKjB,WAApC,oBAIF,6BACE,wBAAQe,KAAK,SAASC,QAASC,KAAKZ,cAApC,uBAIF,6BACE,wBAAQU,KAAK,SAASC,QAASC,KAAKX,UAApC,yBAMN,sBAAKI,UAAWC,IAAIO,WAApB,UACE,sBAAMR,UAAWC,IAAIQ,OAArB,wBACA,+BACE,6BACE,0CAAaF,KAAKrB,MAAMC,UAE1B,6BACE,6CAAgBoB,KAAKrB,MAAME,aAE7B,6BACE,yCAAYmB,KAAKrB,MAAMG,YAI3B,+BACE,6BACE,2CAAckB,KAAKd,0BAErB,qDACsBc,KAAKb,kCAD3B,oB,GA1FWgB,a,gBCYRC,MAVf,WACE,OACE,qBAAKX,UAAWC,IAAIW,aAApB,SACE,cAAC,EAAD,OCHNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,WAAa,6BAA6B,OAAS,yBAAyB,MAAQ,wBAAwB,WAAa,6BAA6B,OAAS,2B,kBCAjLD,EAAOC,QAAU,CAAC,aAAe,6B","file":"static/js/main.c16efd18.chunk.js","sourcesContent":["import { Component } from 'react';\n\nimport css from './Feedback.module.css';\n\nclass Feedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleGood = () => {\n    this.setState(prevState => {\n      const { good } = prevState;\n      return {\n        good: good + 1,\n      };\n    });\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  handleNeutral = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  handleBad = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countTotalFeedback = () => {\n    const curstate = this.state.bad + this.state.good + this.state.neutral;\n    return curstate;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positive = this.state.good;\n    const curstate = this.state.bad + this.state.good + this.state.neutral;\n\n    const proc = (positive / curstate) * 100;\n\n    console.log(proc);\n    return proc;\n  };\n\n  render() {\n    return (\n      <div>\n        <div className={css.containerF}>\n          <span className={css.titleF}>Please leave feedback</span>\n          <ul className={css.listF}>\n            <li>\n              <button type=\"button\" onClick={this.handleGood}>\n                Good\n              </button>\n            </li>\n            <li>\n              <button type=\"button\" onClick={this.handleNeutral}>\n                Neutral\n              </button>\n            </li>\n            <li>\n              <button type=\"button\" onClick={this.handleBad}>\n                Bad\n              </button>\n            </li>\n          </ul>\n        </div>\n        <div className={css.containerS}>\n          <span className={css.titleS}>Statistics</span>\n          <ul>\n            <li>\n              <span>Good: {this.state.good}</span>\n            </li>\n            <li>\n              <span>Neutral: {this.state.neutral}</span>\n            </li>\n            <li>\n              <span>Bad: {this.state.bad}</span>\n            </li>\n          </ul>\n\n          <ul>\n            <li>\n              <span>Total: {this.countTotalFeedback()}</span>\n            </li>\n            <li>\n              Positive feedback: {this.countPositiveFeedbackPercentage()}%\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","// import FeedbackOptions from './FeedbackOptions/FeedbackOptions.jsx';\n// import Statistics from './Statistics/Statistics.jsx';\nimport Feedback from './Feedback/Feedback';\n\nimport css from './App.module.css';\n\nfunction App() {\n  return (\n    <div className={css.appContainer}>\n      <Feedback />\n      {/* <div><FeedbackOptions /></div> */}\n      {/* <div><Statistics /></div> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerF\":\"Feedback_containerF__2AdNL\",\"titleF\":\"Feedback_titleF__3DoV4\",\"listF\":\"Feedback_listF__38BYY\",\"containerS\":\"Feedback_containerS__42jPD\",\"titleS\":\"Feedback_titleS__3yOAg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"App_appContainer__uMoB-\"};"],"sourceRoot":""}